<?php
/**
 * @file
 */

/**
 * Implements hook_field_formatter_info().
 */
function json_editor_field_formatter_info() {
  return array(
    'json_editor' => array(
      'label' => t('Json Editor'),
        'field types' => array('text_long', 'text_with_summary'),
      ),
  );
}


/**
 * Implements hook_menu().
 */
function json_editor_menu() {
  $items = array();
  $items['js_editor/download/%/%/%'] = array(
    'title' => 'Downloading json...',
    'page callback' => 'json_editor_download_json',
    'page arguments' => array(2, 3, 4),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_field_formatter_view().
 */
function json_editor_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  switch ($display['type']) {
    case 'json_editor':
      $element = array();
      drupal_add_js(drupal_get_path('module', 'json_editor') . '/js/jquery-2.0.3.js');
      drupal_add_css(drupal_get_path('module', 'json_editor') . '/jsoneditor/jsoneditor-min.css');
      drupal_add_css(drupal_get_path('module', 'json_editor') . '/css/jquery-ui.css');
      drupal_add_css(drupal_get_path('module', 'json_editor') . '/css/json_editor.css');
      drupal_add_js(drupal_get_path('module', 'json_editor') . '/js/jquery-ui.js');
      drupal_add_js(drupal_get_path('module', 'json_editor') . '/jsoneditor/jsoneditor-min.js');
      drupal_add_js(drupal_get_path('module', 'json_editor') . '/js/jquery-noconflict.js');
      foreach ($items as $delta => $item) {
        $entity_id=$entity->vid;
        $field_name=$field['field_name'];
        $download_button = '<div id="download_button">' . l(t('Download json'), 'js_editor/download/' . $entity_id . '/' . $field_name . '/' . $delta . '/') . '</div>';
        $div_jsoneditor = '<div id="jsoneditor_' . $field_name . '_ ' . $delta . '"></div>';
        $json = $item['value'];
        drupal_add_js('document.addEventListener("DOMContentLoaded", function () {
          var container = document.getElementById("jsoneditor_' . $field_name . '_ ' . $delta . '");
          var editor = new jsoneditor.JSONEditor(container);
          var traffic = ' . $json . ';
          editor.set(traffic);});', 'inline');
        $element[$delta] = array('#markup' => $div_jsoneditor . $download_button);
      }
      break;
  }
  return $element;
}

function json_editor_download_json($nid, $field_name, $delta) {
  $node = node_load($nid);
  $var = $node->$field_name;
  $json_code = $var['und'][$delta]['value'];
  drupal_add_http_header('Content-Type', 'text/json; utf-8');
  drupal_add_http_header('Content-Disposition', 'attachment; filename = download_' . $nid . '_' . $field_name . '_' . $delta . '.json');
  $fh = fopen("php://output", "w");
  fclose($fh);
  echo $json_code;exit;
}